// Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.
// N = 5 -> "5, 4, 3, 2, 1"
// N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

// System.Console.WriteLine("Введите значение N: ");
// int num = Convert.ToInt32(Console.ReadLine());

// int firtsnumber = 1;

// void PrintNumber(int start, int end)
//     {
//         if (start >= end)
//         {
//             Console.Write($"{start} ");
//             PrintNumber(start - 1, end);
//         }
//     }
// PrintNumber(num, firtsnumber);

// Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
// M = 1; N = 15 -> 120
// M = 4; N = 8. -> 30


// public class WriteN
// {
//     static void Main()
//     {
//         Console.Write("Введите значение M: ");
//         int m = Convert.ToInt32(Console.ReadLine());
//         Console.Write("Введите значение N: ");
//         int n = Convert.ToInt32(Console.ReadLine());

//         Console.WriteLine($"Сумма чисел с (М = {m.ToString()}; N = {n.ToString()}) равна {PrintNumbers(m,n).ToString()}");
//     }
//     public static int PrintNumbers(int first, int end)
//     {
//         if (first == end)
//         {
//             return first;
//         }
//         return first + PrintNumbers(first+1,end);
//     }
// }



// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

// public class WriteN
// {
//     static void  Main()
//     {
//         Console.Write("Введите значение М: ");
//         int m = Convert.ToInt32(Console.ReadLine());

//         Console.Write("Введите значение N: ");
//         int n = Convert.ToInt32(Console.ReadLine());

//         if ((m < 0) || (n < 0))
//         {
//             Console.WriteLine($"Числа m = {m}; n = {n} должны быть положительные ");
//         }
//         else
//         {
//             if(((n <=12) && (m <= 3)) || ((n == 0) && (m < 6))) Console.WriteLine($"Вычисление функции Аккермана при m = {m}; n = {n}, A({m.ToString()},{n.ToString()}) = {akkerman(m,n).ToString()}");
//             else Console.WriteLine($"Вычисление функции Аккермана при m = {m}; n = {n}, A({m.ToString()},{n.ToString()}) слишком большое, задайте диапазон меньше");
//         }
//     }
    
//     public static int akkerman(int i, int j)
//     {
//         if (i == 0) return j + 1;
//         else if (j == 0) return akkerman(i - 1, 1);
//         else return akkerman(i - 1, akkerman (i, j - 1));
//     }
// }        
